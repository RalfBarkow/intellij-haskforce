HaskellTokenType.{-# ('{-#')
HaskellTokenType.PRAGMA (' LANGUAGE QuasiQuotes ')
HaskellTokenType.#-} ('#-}')
WHITE_SPACE ('\n')
HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('TempHask00005')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n\n')
HaskellTokenType.instance ('instance')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Yesod')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('App')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n    ')
HaskellTokenType.varidRegexp ('defaultLayout')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('widget')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType.do ('do')
WHITE_SPACE ('\n        ')
HaskellTokenType.comment ('-- Parse names starting with a single quote in splices.\n')
WHITE_SPACE ('        ')
HaskellTokenType.varidRegexp ('pc')
WHITE_SPACE (' ')
HaskellTokenType.<- ('<-')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('widgetToPageContent')
WHITE_SPACE (' ')
HaskellTokenType.Varsym ('$')
WHITE_SPACE (' ')
HaskellTokenType.do ('do')
WHITE_SPACE ('\n            ')
HaskellTokenType.$( ('$(')
HaskellTokenType.varidRegexp ('combineStylesheets')
WHITE_SPACE (' ')
HaskellTokenType.' (''')
HaskellTokenType.conidRegexp ('StaticR')
WHITE_SPACE ('\n                ')
HaskellTokenType.[ ('[')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('css_normalize_css')
WHITE_SPACE ('\n                ')
HaskellTokenType., (',')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('css_bootstrap_css')
WHITE_SPACE ('\n                ')
HaskellTokenType.] (']')
HaskellTokenType.) (')')
WHITE_SPACE ('\n            ')
HaskellTokenType.$( ('$(')
HaskellTokenType.varidRegexp ('widgetFile')
WHITE_SPACE (' ')
HaskellTokenType." ('"')
HaskellTokenType.STRINGTOKEN ('default-layout')
HaskellTokenType." ('"')
HaskellTokenType.) (')')
WHITE_SPACE ('\n        ')
HaskellTokenType.varidRegexp ('giveUrlRenderer')
WHITE_SPACE (' ')
HaskellTokenType.$( ('$(')
HaskellTokenType.varidRegexp ('hamletFile')
WHITE_SPACE (' ')
HaskellTokenType." ('"')
HaskellTokenType.STRINGTOKEN ('templates/default-layout-wrapper.hamlet')
HaskellTokenType." ('"')
HaskellTokenType.) (')')