HaskellTokenType.module ('module')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Layout00025')
WHITE_SPACE (' ')
HaskellTokenType.where ('where')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
HaskellTokenType.Synthetic leftbrace ('')
HaskellTokenType.import ('import')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Text')
HaskellTokenType.. ('.')
HaskellTokenType.conidRegexp ('Parsec')
WHITE_SPACE ('\n')
HaskellTokenType.Synthetic semicolon ('')
HaskellTokenType.import ('import')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Text')
HaskellTokenType.. ('.')
HaskellTokenType.conidRegexp ('Parsec')
HaskellTokenType.. ('.')
HaskellTokenType.conidRegexp ('String')
WHITE_SPACE ('\n')
WHITE_SPACE ('\n')
HaskellTokenType.Synthetic semicolon ('')
HaskellTokenType.varidRegexp ('testParser')
WHITE_SPACE (' ')
HaskellTokenType.:: ('::')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Parser')
WHITE_SPACE (' ')
HaskellTokenType.conidRegexp ('Char')
WHITE_SPACE ('\n')
HaskellTokenType.Synthetic semicolon ('')
HaskellTokenType.varidRegexp ('testParser')
WHITE_SPACE (' ')
HaskellTokenType.= ('=')
WHITE_SPACE (' ')
HaskellTokenType.do ('do')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
HaskellTokenType.Synthetic leftbrace ('')
HaskellTokenType.varidRegexp ('c')
WHITE_SPACE (' ')
HaskellTokenType.<- ('<-')
WHITE_SPACE (' ')
HaskellTokenType.varidRegexp ('char')
WHITE_SPACE (' ')
HaskellTokenType.chartoken (''c'')
WHITE_SPACE ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
HaskellTokenType.VarsymPlus ('<?>')
WHITE_SPACE (' ')
HaskellTokenType." ('"')
HaskellTokenType.STRINGTOKEN ('char c expected')
HaskellTokenType." ('"')
HaskellTokenType.Synthetic rightbrace ('')
HaskellTokenType.Synthetic rightbrace ('')