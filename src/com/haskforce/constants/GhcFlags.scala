package com.haskforce.constants

/** Compiler flags supported by GHC. */
object GhcFlags {

  // Flags list generated with: ghc --show-options | grep '^-f' | sort | xargs -n1 printf ', "%s"\n'
  val list = Array(
      "-fPArr"
    , "-fPIC"
    , "-fPIE"
    , "-falignment-sanitisation"
    , "-fallow-incoherent-instances"
    , "-fallow-overlapping-instances"
    , "-fallow-undecidable-instances"
    , "-farrows"
    , "-fasm"
    , "-fast-llvm"
    , "-fbang-patterns"
    , "-fbuilding-cabal-package"
    , "-fbyte-code"
    , "-fcall-arity"
    , "-fcase-folding"
    , "-fcase-merge"
    , "-fcatch-bottoms"
    , "-fcmm-elim-common-blocks"
    , "-fcmm-sink"
    , "-fconstraint-solver-iterations"
    , "-fcontext-stack"
    , "-fcpr-anal"
    , "-fcross-module-specialise"
    , "-fcross-module-specialize"
    , "-fcse"
    , "-fdefer-out-of-scope-variables"
    , "-fdefer-type-errors"
    , "-fdefer-typed-holes"
    , "-fdiagnostics-color=always"
    , "-fdiagnostics-color=auto"
    , "-fdiagnostics-color=never"
    , "-fdiagnostics-show-caret"
    , "-fdicts-cheap"
    , "-fdicts-strict"
    , "-fdmd-tx-dict-sel"
    , "-fdo-eta-reduction"
    , "-fdo-lambda-eta-expansion"
    , "-feager-blackholing"
    , "-fembed-manifest"
    , "-fenable-rewrite-rules"
    , "-ferror-spans"
    , "-fexcess-precision"
    , "-fexitification"
    , "-fexpose-all-unfoldings"
    , "-fextended-default-rules"
    , "-fexternal-interpreter"
    , "-fffi"
    , "-ffi"
    , "-fflat-cache"
    , "-ffloat-all-lams"
    , "-ffloat-in"
    , "-ffloat-lam-args"
    , "-fforce-recomp"
    , "-ffrontend-opt"
    , "-ffull-laziness"
    , "-ffun-to-thunk"
    , "-fgen-manifest"
    , "-fghci-history"
    , "-fghci-sandbox"
    , "-fglasgow-exts"
    , "-fhelpful-errors"
    , "-fhide-source-paths"
    , "-fhistory-size"
    , "-fhpc"
    , "-fignore-asserts"
    , "-fignore-hpc-changes"
    , "-fignore-interface-pragmas"
    , "-fignore-optim-changes"
    , "-fimplicit-params"
    , "-fimplicit-prelude"
    , "-firrefutable-tuples"
    , "-fkill-absence"
    , "-fkill-one-shot"
    , "-flate-dmd-anal"
    , "-fliberate-case"
    , "-fliberate-case-threshold"
    , "-fllvm"
    , "-fllvm-pass-vectors-in-regs"
    , "-floopification"
    , "-fmax-errors"
    , "-fmax-inline-alloc-size"
    , "-fmax-inline-memcpy-insns"
    , "-fmax-inline-memset-insns"
    , "-fmax-pmcheck-iterations"
    , "-fmax-relevant-binds"
    , "-fmax-simplifier-iterations"
    , "-fmax-uncovered-patterns"
    , "-fmax-valid-substitutions"
    , "-fmax-worker-args"
    , "-fmono-pat-binds"
    , "-fmonomorphism-restriction"
    , "-fno-PArr"
    , "-fno-PIC"
    , "-fno-PIE"
    , "-fno-alignment-sanitisation"
    , "-fno-allow-incoherent-instances"
    , "-fno-allow-overlapping-instances"
    , "-fno-allow-undecidable-instances"
    , "-fno-arrows"
    , "-fno-bang-patterns"
    , "-fno-building-cabal-package"
    , "-fno-call-arity"
    , "-fno-case-folding"
    , "-fno-case-merge"
    , "-fno-catch-bottoms"
    , "-fno-cmm-elim-common-blocks"
    , "-fno-cmm-sink"
    , "-fno-code"
    , "-fno-cpr-anal"
    , "-fno-cross-module-specialise"
    , "-fno-cross-module-specialize"
    , "-fno-cse"
    , "-fno-defer-out-of-scope-variables"
    , "-fno-defer-type-errors"
    , "-fno-defer-typed-holes"
    , "-fno-diagnostics-show-caret"
    , "-fno-dicts-cheap"
    , "-fno-dicts-strict"
    , "-fno-dmd-tx-dict-sel"
    , "-fno-do-eta-reduction"
    , "-fno-do-lambda-eta-expansion"
    , "-fno-eager-blackholing"
    , "-fno-embed-manifest"
    , "-fno-enable-rewrite-rules"
    , "-fno-error-spans"
    , "-fno-excess-precision"
    , "-fno-exitification"
    , "-fno-expose-all-unfoldings"
    , "-fno-extended-default-rules"
    , "-fno-external-interpreter"
    , "-fno-ffi"
    , "-fno-fi"
    , "-fno-flat-cache"
    , "-fno-float-in"
    , "-fno-force-recomp"
    , "-fno-full-laziness"
    , "-fno-fun-to-thunk"
    , "-fno-gen-manifest"
    , "-fno-ghci-history"
    , "-fno-ghci-sandbox"
    , "-fno-glasgow-exts"
    , "-fno-helpful-errors"
    , "-fno-hide-source-paths"
    , "-fno-hpc"
    , "-fno-ignore-asserts"
    , "-fno-ignore-hpc-changes"
    , "-fno-ignore-interface-pragmas"
    , "-fno-ignore-optim-changes"
    , "-fno-implicit-params"
    , "-fno-implicit-prelude"
    , "-fno-irrefutable-tuples"
    , "-fno-kill-absence"
    , "-fno-kill-one-shot"
    , "-fno-late-dmd-anal"
    , "-fno-liberate-case"
    , "-fno-liberate-case-threshold"
    , "-fno-llvm-pass-vectors-in-regs"
    , "-fno-loopification"
    , "-fno-max-errors"
    , "-fno-max-relevant-binds"
    , "-fno-max-valid-substitutions"
    , "-fno-mono-pat-binds"
    , "-fno-monomorphism-restriction"
    , "-fno-omit-interface-pragmas"
    , "-fno-omit-yields"
    , "-fno-opt-coercion"
    , "-fno-optimal-applicative-do"
    , "-fno-parr"
    , "-fno-pedantic-bottoms"
    , "-fno-pre-inlining"
    , "-fno-print-equality-relations"
    , "-fno-print-expanded-synonyms"
    , "-fno-print-explicit-coercions"
    , "-fno-print-explicit-foralls"
    , "-fno-print-explicit-kinds"
    , "-fno-print-explicit-runtime-reps"
    , "-fno-print-potential-instances"
    , "-fno-print-typechecker-elaboration"
    , "-fno-print-unicode-syntax"
    , "-fno-prof-auto"
    , "-fno-prof-cafs"
    , "-fno-prof-count-entries"
    , "-fno-regs-graph"
    , "-fno-regs-iterative"
    , "-fno-reverse-errors"
    , "-fno-rewrite-rules"
    , "-fno-safe-infer"
    , "-fno-scoped-type-variables"
    , "-fno-shared-implib"
    , "-fno-show-hole-constraints"
    , "-fno-show-loaded-modules"
    , "-fno-show-warning-groups"
    , "-fno-solve-constant-dicts"
    , "-fno-spec-constr"
    , "-fno-spec-constr-count"
    , "-fno-spec-constr-keen"
    , "-fno-spec-constr-threshold"
    , "-fno-specialise"
    , "-fno-specialise-aggressively"
    , "-fno-specialize"
    , "-fno-specialize-aggressively"
    , "-fno-state-hack"
    , "-fno-static-argument-transformation"
    , "-fno-stg-cse"
    , "-fno-strictness"
    , "-fno-th"
    , "-fno-unbox-small-strict-fields"
    , "-fno-unbox-strict-fields"
    , "-fno-use-rpaths"
    , "-fno-vectorisation-avoidance"
    , "-fno-vectorise"
    , "-fno-version-macros"
    , "-fno-whole-archive-hs-libs"
    , "-fno-worker-wrapper"
    , "-fno-write-interface"
    , "-fobject-code"
    , "-fomit-interface-pragmas"
    , "-fomit-yields"
    , "-foptimal-applicative-do"
    , "-fpackage-trust"
    , "-fparr"
    , "-fpedantic-bottoms"
    , "-fplugin"
    , "-fplugin-opt"
    , "-fpre-inlining"
    , "-fprint-equality-relations"
    , "-fprint-expanded-synonyms"
    , "-fprint-explicit-coercions"
    , "-fprint-explicit-foralls"
    , "-fprint-explicit-kinds"
    , "-fprint-explicit-runtime-reps"
    , "-fprint-potential-instances"
    , "-fprint-typechecker-elaboration"
    , "-fprint-unicode-syntax"
    , "-fprof-auto"
    , "-fprof-auto-calls"
    , "-fprof-auto-exported"
    , "-fprof-auto-top"
    , "-fprof-cafs"
    , "-fprof-count-entries"
    , "-framework"
    , "-framework-path"
    , "-freduction-depth"
    , "-fregs-graph"
    , "-fregs-iterative"
    , "-freverse-errors"
    , "-frewrite-rules"
    , "-frule-check"
    , "-fscoped-type-variables"
    , "-fshared-implib"
    , "-fshow-hole-constraints"
    , "-fshow-loaded-modules"
    , "-fshow-warning-groups"
    , "-fsimpl-tick-factor"
    , "-fsimplifier-phases"
    , "-fsolve-constant-dicts"
    , "-fspec-constr"
    , "-fspec-constr-count"
    , "-fspec-constr-keen"
    , "-fspec-constr-recursive"
    , "-fspec-constr-threshold"
    , "-fspecialise"
    , "-fspecialise-aggressively"
    , "-fspecialize"
    , "-fspecialize-aggressively"
    , "-fstatic-argument-transformation"
    , "-fstg-cse"
    , "-fstrictness"
    , "-fstrictness-before"
    , "-fth"
    , "-ftype-function-depth"
    , "-funbox-small-strict-fields"
    , "-funbox-strict-fields"
    , "-funfolding-creation-threshold"
    , "-funfolding-dict-discount"
    , "-funfolding-fun-discount"
    , "-funfolding-keeness-factor"
    , "-funfolding-use-threshold"
    , "-fuse-rpaths"
    , "-fvectorisation-avoidance"
    , "-fvectorise"
    , "-fversion-macros"
    , "-fvia-C"
    , "-fvia-c"
    , "-fwhole-archive-hs-libs"
    , "-fworker-wrapper"
    , "-fwrite-interface"
  )
}
